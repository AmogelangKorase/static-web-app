'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (depsMap, allDone) {
    var _depsMap$save = depsMap.save,
        save = _depsMap$save === undefined ? [] : _depsMap$save,
        _depsMap$saveDev = depsMap.saveDev,
        saveDev = _depsMap$saveDev === undefined ? [] : _depsMap$saveDev;

    console.log('\n' + _chalk2.default.cyan('Starting dependencies installation') + '\n');
    install(save, { save: true }, function () {
        console.log('\n' + _chalk2.default.cyan('Starting devDependencies installation') + '\n');
        install(saveDev, { saveDev: true }, allDone);
    });
};

var _crossSpawn = require('cross-spawn');

var _crossSpawn2 = _interopRequireDefault(_crossSpawn);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _ora = require('ora');

var _ora2 = _interopRequireDefault(_ora);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var install = function install(deps, opts, done) {
    var len = deps.length;
    if (len) {
        var dep = deps.shift();

        var spinner = new _ora2.default({
            text: 'Installing ' + dep + '...'
        });
        spinner.start();

        // 是 dependencies 还是 devDependencies，默认为 dependencies
        var depArgs = opts.saveDev ? '-D' : '-S';

        var stderrData = '';
        var child = (0, _crossSpawn2.default)('npm', ['install', depArgs, dep]);

        child.stderr.on('data', function (data) {
            stderrData += data.toString();
        });

        child.on('error', function (err) {
            spinner.fail(_chalk2.default.red('err: Install ' + dep + ':\n' + stderrData));
            throw err;
        });

        child.on('close', function (code) {
            if (code !== 0) {
                spinner.fail(_chalk2.default.red('err: Install ' + dep + ':\n' + stderrData));
                process.exit(code);
            }
            spinner.succeed(_chalk2.default.green('Installed ' + dep));
            install(deps, opts, done);
        });

        return;
    }

    done();
}; /**
    * @file npm install 模块
    * @author ielgnaw(wuji0223@gmail.com)
    */

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ucG0taW5zdGFsbC5qcyJdLCJuYW1lcyI6WyJkZXBzTWFwIiwiYWxsRG9uZSIsInNhdmUiLCJzYXZlRGV2IiwiY29uc29sZSIsImxvZyIsImN5YW4iLCJpbnN0YWxsIiwiZGVwcyIsIm9wdHMiLCJkb25lIiwibGVuIiwibGVuZ3RoIiwiZGVwIiwic2hpZnQiLCJzcGlubmVyIiwidGV4dCIsInN0YXJ0IiwiZGVwQXJncyIsInN0ZGVyckRhdGEiLCJjaGlsZCIsInN0ZGVyciIsIm9uIiwiZGF0YSIsInRvU3RyaW5nIiwiZmFpbCIsInJlZCIsImVyciIsImNvZGUiLCJwcm9jZXNzIiwiZXhpdCIsInN1Y2NlZWQiLCJncmVlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2tCQWlEZSxVQUFVQSxPQUFWLEVBQW1CQyxPQUFuQixFQUE0QjtBQUFBLHdCQUNMRCxPQURLLENBQ2hDRSxJQURnQztBQUFBLFFBQ2hDQSxJQURnQyxpQ0FDekIsRUFEeUI7QUFBQSwyQkFDTEYsT0FESyxDQUNyQkcsT0FEcUI7QUFBQSxRQUNyQkEsT0FEcUIsb0NBQ1gsRUFEVzs7QUFFdkNDLFlBQVFDLEdBQVIsUUFBaUIsZ0JBQU1DLElBQU4sQ0FBVyxvQ0FBWCxDQUFqQjtBQUNBQyxZQUFRTCxJQUFSLEVBQWMsRUFBQ0EsTUFBTSxJQUFQLEVBQWQsRUFBNEIsWUFBTTtBQUM5QkUsZ0JBQVFDLEdBQVIsUUFBaUIsZ0JBQU1DLElBQU4sQ0FBVyx1Q0FBWCxDQUFqQjtBQUNBQyxnQkFBUUosT0FBUixFQUFpQixFQUFDQSxTQUFTLElBQVYsRUFBakIsRUFBa0NGLE9BQWxDO0FBQ0gsS0FIRDtBQUlILEM7O0FBbkREOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBTU0sVUFBVSxTQUFWQSxPQUFVLENBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFhQyxJQUFiLEVBQXNCO0FBQ2xDLFFBQU1DLE1BQU1ILEtBQUtJLE1BQWpCO0FBQ0EsUUFBSUQsR0FBSixFQUFTO0FBQ0wsWUFBTUUsTUFBTUwsS0FBS00sS0FBTCxFQUFaOztBQUVBLFlBQU1DLFVBQVUsa0JBQVE7QUFDcEJDLGtDQUFvQkgsR0FBcEI7QUFEb0IsU0FBUixDQUFoQjtBQUdBRSxnQkFBUUUsS0FBUjs7QUFFQTtBQUNBLFlBQU1DLFVBQVVULEtBQUtOLE9BQUwsR0FBZSxJQUFmLEdBQXNCLElBQXRDOztBQUVBLFlBQUlnQixhQUFhLEVBQWpCO0FBQ0EsWUFBTUMsUUFBUSwwQkFBTSxLQUFOLEVBQWEsQ0FBQyxTQUFELEVBQVlGLE9BQVosRUFBcUJMLEdBQXJCLENBQWIsQ0FBZDs7QUFFQU8sY0FBTUMsTUFBTixDQUFhQyxFQUFiLENBQWdCLE1BQWhCLEVBQXdCLGdCQUFRO0FBQzVCSCwwQkFBY0ksS0FBS0MsUUFBTCxFQUFkO0FBQ0gsU0FGRDs7QUFJQUosY0FBTUUsRUFBTixDQUFTLE9BQVQsRUFBa0IsZUFBTztBQUNyQlAsb0JBQVFVLElBQVIsQ0FBYSxnQkFBTUMsR0FBTixtQkFBMEJiLEdBQTFCLFdBQW1DTSxVQUFuQyxDQUFiO0FBQ0Esa0JBQU1RLEdBQU47QUFDSCxTQUhEOztBQUtBUCxjQUFNRSxFQUFOLENBQVMsT0FBVCxFQUFrQixnQkFBUTtBQUN0QixnQkFBSU0sU0FBUyxDQUFiLEVBQWdCO0FBQ1piLHdCQUFRVSxJQUFSLENBQWEsZ0JBQU1DLEdBQU4sbUJBQTBCYixHQUExQixXQUFtQ00sVUFBbkMsQ0FBYjtBQUNBVSx3QkFBUUMsSUFBUixDQUFhRixJQUFiO0FBQ0g7QUFDRGIsb0JBQVFnQixPQUFSLENBQWdCLGdCQUFNQyxLQUFOLGdCQUF5Qm5CLEdBQXpCLENBQWhCO0FBQ0FOLG9CQUFRQyxJQUFSLEVBQWNDLElBQWQsRUFBb0JDLElBQXBCO0FBQ0gsU0FQRDs7QUFTQTtBQUNIOztBQUVEQTtBQUNILENBdENELEMsQ0FUQSIsImZpbGUiOiJucG0taW5zdGFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgbnBtIGluc3RhbGwg5qih5Z2XXG4gKiBAYXV0aG9yIGllbGduYXcod3VqaTAyMjNAZ21haWwuY29tKVxuICovXG5cbmltcG9ydCBzcGF3biBmcm9tICdjcm9zcy1zcGF3bic7XG5pbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuaW1wb3J0IE9yYSBmcm9tICdvcmEnO1xuXG5jb25zdCBpbnN0YWxsID0gKGRlcHMsIG9wdHMsIGRvbmUpID0+IHtcbiAgICBjb25zdCBsZW4gPSBkZXBzLmxlbmd0aDtcbiAgICBpZiAobGVuKSB7XG4gICAgICAgIGNvbnN0IGRlcCA9IGRlcHMuc2hpZnQoKTtcblxuICAgICAgICBjb25zdCBzcGlubmVyID0gbmV3IE9yYSh7XG4gICAgICAgICAgICB0ZXh0OiBgSW5zdGFsbGluZyAke2RlcH0uLi5gXG4gICAgICAgIH0pO1xuICAgICAgICBzcGlubmVyLnN0YXJ0KCk7XG5cbiAgICAgICAgLy8g5pivIGRlcGVuZGVuY2llcyDov5jmmK8gZGV2RGVwZW5kZW5jaWVz77yM6buY6K6k5Li6IGRlcGVuZGVuY2llc1xuICAgICAgICBjb25zdCBkZXBBcmdzID0gb3B0cy5zYXZlRGV2ID8gJy1EJyA6ICctUyc7XG5cbiAgICAgICAgbGV0IHN0ZGVyckRhdGEgPSAnJztcbiAgICAgICAgY29uc3QgY2hpbGQgPSBzcGF3bignbnBtJywgWydpbnN0YWxsJywgZGVwQXJncywgZGVwXSk7XG5cbiAgICAgICAgY2hpbGQuc3RkZXJyLm9uKCdkYXRhJywgZGF0YSA9PiB7XG4gICAgICAgICAgICBzdGRlcnJEYXRhICs9IGRhdGEudG9TdHJpbmcoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY2hpbGQub24oJ2Vycm9yJywgZXJyID0+IHtcbiAgICAgICAgICAgIHNwaW5uZXIuZmFpbChjaGFsay5yZWQoYGVycjogSW5zdGFsbCAke2RlcH06XFxuJHtzdGRlcnJEYXRhfWApKTtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY2hpbGQub24oJ2Nsb3NlJywgY29kZSA9PiB7XG4gICAgICAgICAgICBpZiAoY29kZSAhPT0gMCkge1xuICAgICAgICAgICAgICAgIHNwaW5uZXIuZmFpbChjaGFsay5yZWQoYGVycjogSW5zdGFsbCAke2RlcH06XFxuJHtzdGRlcnJEYXRhfWApKTtcbiAgICAgICAgICAgICAgICBwcm9jZXNzLmV4aXQoY29kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzcGlubmVyLnN1Y2NlZWQoY2hhbGsuZ3JlZW4oYEluc3RhbGxlZCAke2RlcH1gKSk7XG4gICAgICAgICAgICBpbnN0YWxsKGRlcHMsIG9wdHMsIGRvbmUpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZG9uZSgpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGRlcHNNYXAsIGFsbERvbmUpIHtcbiAgICBjb25zdCB7c2F2ZSA9IFtdLCBzYXZlRGV2ID0gW119ID0gZGVwc01hcDtcbiAgICBjb25zb2xlLmxvZyhgXFxuJHtjaGFsay5jeWFuKCdTdGFydGluZyBkZXBlbmRlbmNpZXMgaW5zdGFsbGF0aW9uJyl9XFxuYCk7XG4gICAgaW5zdGFsbChzYXZlLCB7c2F2ZTogdHJ1ZX0sICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coYFxcbiR7Y2hhbGsuY3lhbignU3RhcnRpbmcgZGV2RGVwZW5kZW5jaWVzIGluc3RhbGxhdGlvbicpfVxcbmApO1xuICAgICAgICBpbnN0YWxsKHNhdmVEZXYsIHtzYXZlRGV2OiB0cnVlfSwgYWxsRG9uZSk7XG4gICAgfSk7XG59XG4iXX0=