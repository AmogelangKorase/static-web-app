'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
                                                                                                                                                                                                                                                                               * @file Description
                                                                                                                                                                                                                                                                               * @author ielgnaw(wuji0223@gmail.com)
                                                                                                                                                                                                                                                                               */

exports.setDefault = setDefault;

exports.default = function (curPrompts, projectName, inCurrent) {
    var dest = inCurrent ? '.' : projectName;
    var metalsmith = new _metalsmith2.default((0, _path.join)(__dirname, './template')).source('.');
    metalsmith.use(ask(curPrompts)).use(filterFiles).use(renderTemplate).clean(false).destination((0, _path.join)(process.cwd(), dest)).build(function (err) {
        if (err) {
            throw err;
        }

        var curDependencies = _extends({}, _meta2.default.ALL_DEPENDENCIES);

        var metadata = metalsmith.metadata();
        console.log('metadata', metadata);

        if (metadata.redis) {
            curDependencies.save.push('redis');
        }

        if (metadata.auth === 'uuap') {
            curDependencies.saveDev.push('jsonwebtoken');
        }

        process.chdir(dest);

        (0, _npmInstall2.default)(_meta2.default.ALL_DEPENDENCIES, function () {
            console.log('all deps install done\n');
            console.log('Please complete your profile:\n');
        });
    });
};

var _path = require('path');

var _inquirer = require('inquirer');

var _inquirer2 = _interopRequireDefault(_inquirer);

var _async = require('async');

var _async2 = _interopRequireDefault(_async);

var _metalsmith = require('metalsmith');

var _metalsmith2 = _interopRequireDefault(_metalsmith);

var _consolidate = require('consolidate');

var _consolidate2 = _interopRequireDefault(_consolidate);

var _npmInstall = require('./npm-install');

var _npmInstall2 = _interopRequireDefault(_npmInstall);

var _meta = require('./meta');

var _meta2 = _interopRequireDefault(_meta);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RENDER = _consolidate2.default.handlebars.render;

/**
 * metalsmith plugin repl
 *
 * @param {Object} curPrompts 当前的提示问题
 */
var ask = function ask(curPrompts) {
    return function (files, metalsmith, done) {
        var metadata = metalsmith.metadata();

        _async2.default.eachSeries(Object.keys(curPrompts), function (key, next) {
            run(metadata, key, curPrompts[key], next);
        }, done);

        function run(data, key, prompt, done) {
            var _this = this;

            if (key === 'separator') {
                console.log('\n---- ' + prompt.message + ' set (Now we only support MySQL) ----');
                return done();
            }

            var promptDefault = prompt.default;
            if (typeof prompt.default === 'function') {
                promptDefault = function promptDefault() {
                    return prompt.default.bind(_this)(data);
                };
            }

            _inquirer2.default.prompt([{
                type: prompt.type,
                name: key,
                message: prompt.message || prompt.label || key,
                default: promptDefault,
                choices: prompt.choices || [],
                validate: prompt.validate || function () {
                    return true;
                },
                filter: prompt.filter || function () {}
            }]).then(function (answers) {
                if (Array.isArray(answers[key])) {
                    data[key] = {};
                    answers[key].forEach(function (multiChoiceAnswer) {
                        data[key][multiChoiceAnswer] = true;
                    });
                } else if (typeof answers[key] === 'string') {
                    data[key] = answers[key].replace(/"/g, '\\"');
                } else {
                    data[key] = answers[key];
                }

                done();
            });
        }
    };
};

/**
 * metalsmith plugin 渲染模板
 *
 * @param {Object} files files 对象
 * @param {Object} metalsmith metalsmith 实例对象
 * @param {Function} done 完成回调函数
 */
var renderTemplate = function renderTemplate(files, metalsmith, done) {
    var keys = Object.keys(files);
    var metadata = metalsmith.metadata();

    _async2.default.each(keys, run, done);

    function run(file, done) {
        var str = files[file].contents.toString();
        RENDER(str, metadata, function (err, res) {
            if (err) {
                return done(err);
            }
            files[file].contents = new Buffer(res);
            done();
        });
    }
};

/**
 * 设置提示问题的默认值
 *
 * @param {Object} prompts 提示问题
 * @param {string} key 提示问题的 key
 * @param {string} val 提示问题的 value
 */
function setDefault(prompts, key, val) {
    if (!prompts[key] || _typeof(prompts[key]) !== 'object') {
        prompts[key] = {
            type: 'input',
            default: val
        };
    } else {
        prompts[key]['default'] = val;
    }
}

/**
 * metalsmith plugin 过滤文件，把一些根据命令行选择项参数的文件过滤掉
 *
 * @param {Object} files files 对象
 * @param {Object} metalsmith metalsmith 实例对象
 * @param {Function} done 完成回调函数
 */
function filterFiles(files, metalsmith, done) {
    var metadata = metalsmith.metadata();
    if (!metadata.redis) {
        delete files['server/conf/redis.js'];
    }
    if (!metadata.uuap) {
        delete files['server/conf/uuap.js'];
    }
    done();
}

/**
 * generate project
 *
 * @param {Object} curPrompts 当前的提示问题
 * @param {string} projectName 项目名称
 * @param {boolean} inCurrent 是否在当前目录直接创建项目
 */
//# sourceMappingURL=data:application/json;charset=utf-8;base64,