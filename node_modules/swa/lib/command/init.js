'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * @file init 命令
                                                                                                                                                                                                                                                                   * @author ielgnaw(wuji0223@gmail.com)
                                                                                                                                                                                                                                                                   */

var _path = require('path');

var _fs = require('fs');

var _inquirer = require('inquirer');

var _inquirer2 = _interopRequireDefault(_inquirer);

var _rimraf = require('rimraf');

var _rimraf2 = _interopRequireDefault(_rimraf);

var _gitUser = require('../git-user');

var _gitUser2 = _interopRequireDefault(_gitUser);

var _meta = require('../meta');

var _meta2 = _interopRequireDefault(_meta);

var _generate = require('../generate');

var _generate2 = _interopRequireDefault(_generate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * inquirer.prompt then function
 *
 * @param {string} projectName 项目名称
 * @param {boolean} inCurrent 是否在当前目录直接创建项目
 */
var inquirerPromptDone = function inquirerPromptDone(projectName, inCurrent) {
    var curPrompts = _extends({}, _meta2.default.PROMPTS);
    (0, _generate.setDefault)(curPrompts, 'name', projectName);
    (0, _generate.setDefault)(curPrompts, 'author', (0, _gitUser2.default)());
    (0, _generate2.default)(curPrompts, projectName, inCurrent);
};

exports.default = {
    command: ['init [directory]'],
    describe: 'Initialize project in the current directory or specified directory',
    builder: {},
    handler: function handler(argv) {
        var directory = argv.directory;
        if (!directory || directory === '.') {
            _inquirer2.default.prompt([{
                type: 'confirm',
                message: !(0, _fs.readdirSync)('.', 'utf8').length ? 'Generate project in current directory' : 'The current directory is not empty, do you want to overwrite',
                name: 'ok'
            }]).then(function (answers) {
                if (!answers.ok) {
                    return;
                }
                inquirerPromptDone((0, _path.basename)(process.cwd()), true);
            });
        } else {
            if ((0, _fs.existsSync)(directory) && (0, _fs.statSync)(directory).isDirectory()) {
                _inquirer2.default.prompt([{
                    type: 'confirm',
                    message: 'Target directory exists. Continue?',
                    name: 'ok'
                }]).then(function (answers) {
                    if (!answers.ok) {
                        return;
                    }
                    _rimraf2.default.sync((0, _path.join)('.', directory));
                    inquirerPromptDone(directory);
                });
                return;
            } else {
                inquirerPromptDone(directory);
            }
        }
    }
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kL2luaXQuanMiXSwibmFtZXMiOlsiaW5xdWlyZXJQcm9tcHREb25lIiwicHJvamVjdE5hbWUiLCJpbkN1cnJlbnQiLCJjdXJQcm9tcHRzIiwiUFJPTVBUUyIsImNvbW1hbmQiLCJkZXNjcmliZSIsImJ1aWxkZXIiLCJoYW5kbGVyIiwiZGlyZWN0b3J5IiwiYXJndiIsInByb21wdCIsInR5cGUiLCJtZXNzYWdlIiwibGVuZ3RoIiwibmFtZSIsInRoZW4iLCJhbnN3ZXJzIiwib2siLCJwcm9jZXNzIiwiY3dkIiwiaXNEaXJlY3RvcnkiLCJzeW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7a1FBQUE7Ozs7O0FBS0E7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUE7Ozs7OztBQU1BLElBQU1BLHFCQUFxQixTQUFyQkEsa0JBQXFCLENBQUNDLFdBQUQsRUFBY0MsU0FBZCxFQUE0QjtBQUNuRCxRQUFNQyxhQUFhLFNBQWMsRUFBZCxFQUFrQixlQUFLQyxPQUF2QixDQUFuQjtBQUNBLDhCQUFXRCxVQUFYLEVBQXVCLE1BQXZCLEVBQStCRixXQUEvQjtBQUNBLDhCQUFXRSxVQUFYLEVBQXVCLFFBQXZCLEVBQWlDLHdCQUFqQztBQUNBLDRCQUFTQSxVQUFULEVBQXFCRixXQUFyQixFQUFrQ0MsU0FBbEM7QUFDSCxDQUxEOztrQkFPZTtBQUNYRyxhQUFTLENBQUMsa0JBQUQsQ0FERTtBQUVYQyxjQUFVLG9FQUZDO0FBR1hDLGFBQVMsRUFIRTtBQUlYQyxhQUFTLHVCQUFRO0FBQ2IsWUFBSUMsWUFBWUMsS0FBS0QsU0FBckI7QUFDQSxZQUFJLENBQUNBLFNBQUQsSUFBY0EsY0FBYyxHQUFoQyxFQUFxQztBQUNqQywrQkFBU0UsTUFBVCxDQUFnQixDQUFDO0FBQ2JDLHNCQUFNLFNBRE87QUFFYkMseUJBQVMsQ0FBQyxxQkFBWSxHQUFaLEVBQWlCLE1BQWpCLEVBQXlCQyxNQUExQixHQUNILHVDQURHLEdBRUgsOERBSk87QUFLYkMsc0JBQU07QUFMTyxhQUFELENBQWhCLEVBTUlDLElBTkosQ0FNUyxtQkFBVztBQUNoQixvQkFBSSxDQUFDQyxRQUFRQyxFQUFiLEVBQWlCO0FBQ2I7QUFDSDtBQUNEbEIsbUNBQW1CLG9CQUFTbUIsUUFBUUMsR0FBUixFQUFULENBQW5CLEVBQTRDLElBQTVDO0FBQ0gsYUFYRDtBQVlILFNBYkQsTUFjSztBQUNELGdCQUFJLG9CQUFXWCxTQUFYLEtBQXlCLGtCQUFTQSxTQUFULEVBQW9CWSxXQUFwQixFQUE3QixFQUFnRTtBQUM1RCxtQ0FBU1YsTUFBVCxDQUFnQixDQUFDO0FBQ2JDLDBCQUFNLFNBRE87QUFFYkMsNkJBQVMsb0NBRkk7QUFHYkUsMEJBQU07QUFITyxpQkFBRCxDQUFoQixFQUlJQyxJQUpKLENBSVMsbUJBQVc7QUFDaEIsd0JBQUksQ0FBQ0MsUUFBUUMsRUFBYixFQUFpQjtBQUNiO0FBQ0g7QUFDRCxxQ0FBT0ksSUFBUCxDQUFZLGdCQUFLLEdBQUwsRUFBVWIsU0FBVixDQUFaO0FBQ0FULHVDQUFtQlMsU0FBbkI7QUFDSCxpQkFWRDtBQVdBO0FBQ0gsYUFiRCxNQWNLO0FBQ0RULG1DQUFtQlMsU0FBbkI7QUFDSDtBQUNKO0FBQ0o7QUF2Q1UsQyIsImZpbGUiOiJpbml0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBpbml0IOWRveS7pFxuICogQGF1dGhvciBpZWxnbmF3KHd1amkwMjIzQGdtYWlsLmNvbSlcbiAqL1xuXG5pbXBvcnQge2pvaW4sIGJhc2VuYW1lfSBmcm9tICdwYXRoJztcbmltcG9ydCB7cmVhZGRpclN5bmMsIGV4aXN0c1N5bmMsIHN0YXRTeW5jfSBmcm9tICdmcyc7XG5pbXBvcnQgaW5xdWlyZXIgZnJvbSAnaW5xdWlyZXInO1xuaW1wb3J0IHJpbXJhZiBmcm9tICdyaW1yYWYnO1xuaW1wb3J0IHVzZXIgZnJvbSAnLi4vZ2l0LXVzZXInO1xuaW1wb3J0IG1ldGEgZnJvbSAnLi4vbWV0YSc7XG5pbXBvcnQgZ2VuZXJhdGUsIHtzZXREZWZhdWx0fSBmcm9tICcuLi9nZW5lcmF0ZSc7XG5cbi8qKlxuICogaW5xdWlyZXIucHJvbXB0IHRoZW4gZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvamVjdE5hbWUg6aG555uu5ZCN56ewXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGluQ3VycmVudCDmmK/lkKblnKjlvZPliY3nm67lvZXnm7TmjqXliJvlu7rpobnnm65cbiAqL1xuY29uc3QgaW5xdWlyZXJQcm9tcHREb25lID0gKHByb2plY3ROYW1lLCBpbkN1cnJlbnQpID0+IHtcbiAgICBjb25zdCBjdXJQcm9tcHRzID0gT2JqZWN0LmFzc2lnbih7fSwgbWV0YS5QUk9NUFRTKTtcbiAgICBzZXREZWZhdWx0KGN1clByb21wdHMsICduYW1lJywgcHJvamVjdE5hbWUpO1xuICAgIHNldERlZmF1bHQoY3VyUHJvbXB0cywgJ2F1dGhvcicsIHVzZXIoKSk7XG4gICAgZ2VuZXJhdGUoY3VyUHJvbXB0cywgcHJvamVjdE5hbWUsIGluQ3VycmVudCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgY29tbWFuZDogWydpbml0IFtkaXJlY3RvcnldJ10sXG4gICAgZGVzY3JpYmU6ICdJbml0aWFsaXplIHByb2plY3QgaW4gdGhlIGN1cnJlbnQgZGlyZWN0b3J5IG9yIHNwZWNpZmllZCBkaXJlY3RvcnknLFxuICAgIGJ1aWxkZXI6IHt9LFxuICAgIGhhbmRsZXI6IGFyZ3YgPT4ge1xuICAgICAgICBsZXQgZGlyZWN0b3J5ID0gYXJndi5kaXJlY3Rvcnk7XG4gICAgICAgIGlmICghZGlyZWN0b3J5IHx8IGRpcmVjdG9yeSA9PT0gJy4nKSB7XG4gICAgICAgICAgICBpbnF1aXJlci5wcm9tcHQoW3tcbiAgICAgICAgICAgICAgICB0eXBlOiAnY29uZmlybScsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogIXJlYWRkaXJTeW5jKCcuJywgJ3V0ZjgnKS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgPyAnR2VuZXJhdGUgcHJvamVjdCBpbiBjdXJyZW50IGRpcmVjdG9yeSdcbiAgICAgICAgICAgICAgICAgICAgOiAnVGhlIGN1cnJlbnQgZGlyZWN0b3J5IGlzIG5vdCBlbXB0eSwgZG8geW91IHdhbnQgdG8gb3ZlcndyaXRlJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnb2snXG4gICAgICAgICAgICB9XSkudGhlbihhbnN3ZXJzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIWFuc3dlcnMub2spIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpbnF1aXJlclByb21wdERvbmUoYmFzZW5hbWUocHJvY2Vzcy5jd2QoKSksIHRydWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoZXhpc3RzU3luYyhkaXJlY3RvcnkpICYmIHN0YXRTeW5jKGRpcmVjdG9yeSkuaXNEaXJlY3RvcnkoKSkge1xuICAgICAgICAgICAgICAgIGlucXVpcmVyLnByb21wdChbe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY29uZmlybScsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdUYXJnZXQgZGlyZWN0b3J5IGV4aXN0cy4gQ29udGludWU/JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ29rJyxcbiAgICAgICAgICAgICAgICB9XSkudGhlbihhbnN3ZXJzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFhbnN3ZXJzLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmltcmFmLnN5bmMoam9pbignLicsIGRpcmVjdG9yeSkpO1xuICAgICAgICAgICAgICAgICAgICBpbnF1aXJlclByb21wdERvbmUoZGlyZWN0b3J5KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbnF1aXJlclByb21wdERvbmUoZGlyZWN0b3J5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG4iXX0=